/*TASK-3*/
use Techshop;
/*1. Write an SQL query to retrieve a list of all orders along with customer information (e.g.,
customer name) for each order.*/
select o.OrderId,
	   o.Orderdate,
	   concat(c.firstName,' ',c.lastName) as CustomerName,
	   c.email
 from Orders o,Customers c
 where o.CustomerID=c.CustomerId;

 /*2. Write an SQL query to find the total revenue generated by each electronic gadget product.
Include the product name and the total revenue.*/


select p.ProductName, sum(p.price*o.Quantity) as TotalRevenue from Products p left join OrderDetails o 
on o.ProductID=p.ProductID
group by productName
order by TotalRevenue desc;


/*3.Write an SQL query to list all customers who have made at least one purchase. Include their
names and contact information*/

select concat(FirstName,' ',LastName)as CustomerName,email,phone
from Customers,Orders
where Customers.CustomerId=orders.CustomerID
group by FirstName,
		 lastname,
		 email,
		 phone;

/*4. Write an SQL query to find the most popular electronic gadget, which is the one with the highest
total quantity ordered. Include the product name and the total quantity ordered*/

	SELECT  top 1 p.ProductName, SUM(od.Quantity) AS TotalQuantityOrdered
	FROM OrderDetails od
	INNER JOIN Products p ON od.ProductID = p.ProductID
	GROUP BY p.ProductName
	ORDER BY TotalQuantityOrdered DESC;

/*5.Write an SQL query to retrieve a list of electronic gadgets along with their corresponding
categories.*/

ALTER TABLE Products
ADD Category VARCHAR(20);
UPDATE Products
SET Category = 
    CASE 
        WHEN Description LIKE '%smartphone%' THEN 'Electronics'
        WHEN Description LIKE '%laptop%' THEN 'Electronics'
        WHEN Description LIKE '%headphones%' THEN 'Electronics'
        WHEN Description LIKE '%smart watch%' THEN 'Electronics'
        WHEN Description LIKE '%tablet%' THEN 'Electronics'
        WHEN Description LIKE '%digital camera%' THEN 'Electronics'
        WHEN Description LIKE '%gaming console%' THEN 'Electronics'
        WHEN Description LIKE '%bluetooth speaker%' THEN 'Electronics'
        WHEN Description LIKE '%external hard drive%' THEN 'Electronics'
        WHEN Description LIKE '%wireless router%' THEN 'Electronics'
        WHEN Description LIKE '%fitness tracker%' THEN 'Electronics'
        WHEN Description LIKE '%smart home hub%' THEN 'Electronics'
        WHEN Description LIKE '%wireless earbuds%' THEN 'Electronics'
        WHEN Description LIKE '%monitor%' THEN 'Electronics'
        WHEN Description LIKE '%printer%' THEN 'Electronics'
		WHEN Description LIKE '%scanner%' THEN 'Electronics'
		WHEN Description LIKE '%Keyboard%' THEN 'Electronics'
        ELSE 'Other'
    END;
SELECT ProductName, Category FROM Products

/*6.Write an SQL query to calculate the average order value for each customer. Include the
customer's name and their average order value.*/
/*CHECK!!!!!*/
select * from ORders;
select * from Customers;
select concat(FirstName,' ',LastNAme) as Customer,avg(totalAmount)as avgamount from Customers left join Orders
on Customers.CustomerId=Orders.OrderID
group by Orders.CustomerID,Customers.FirstName,Customers.LastName
order by avgamount ;


/*7. Write an SQL query to find the order with the highest total revenue. Include the order ID,
customer information, and the total revenue.*/

select TotalAmount,concat(FirstName,' ',Lastname) as CustomerName from Orders join Customers
on Orders.CustomerID=Customers.CustomerId
where totalAmount=(Select max(totalAmount) from Orders);
select * from Orders
order by totalamount desc;
/*8. Write an SQL query to list electronic gadgets and the number of times each product has been
ordered.*/

select products.ProductID,Products.ProductName ,count(Quantity)as NumberOfTimesOrdered from OrderDetails
right join Products
on OrderDetails.ProductID=Products.ProductID
group by products.ProductID,products.ProductName;

/*9. Write an SQL query to find customers who have purchased a specific electronic gadget product.
Allow users to input the product name as a parameter.*/

CREATE PROCEDURE FindCustomer
	@ProductName VARCHAR(20)
AS 
BEGIN
	SELECT C.FirstName+' '+C.LastName AS CustomerName,
		P.ProductName	
	FROM Customers AS C
	JOIN Orders AS O ON O.CustomerID = C.CustomerID
	JOIN OrderDetails AS OD ON OD.OrderID = O.OrderID
	JOIN Products AS P ON P.ProductID = OD.ProductID
	WHERE P.ProductName = @ProductName
END;
EXEC FindCustomer @ProductName ='Smartphone';
select * from products;
select * from orderdetails;
select * from orders;

/*10. Write an SQL query to calculate the total revenue generated by all orders placed within a
specific time period. Allow users to input the start and end dates as parameters.*/
create procedure CALTOTREV
	@stdate date,
	@enddate date
AS
begin

	select sum(TotalAmount) as Total from Orders
	where OrderDate between @stdate and @enddate;
end;
exec CALTOTREV @stdate='2024-02-19',@enddate='2024-02-23';
